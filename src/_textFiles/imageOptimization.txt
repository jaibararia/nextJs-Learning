- To start using <Image>, import it from next/image and render it within your component.

-app/page.tsx
import Image from 'next/image'
 
export default function Page() {
  return <Image src="" alt="" />
}
- The src property can be a local or remote image.

* Learn more about how to use next/image - https://www.youtube.com/watch?v=IU_qq_c_lKA

-> Local images

- You can store static files, like images and fonts, under a folder called public in the root directory. 

example;
-app/page.tsx

import Image from 'next/image'
 
export default function Page() {
  return (
    <Image
      src="/profile.png"
      alt="Picture of the author"
      width={500}
      height={500}
    />
  )
}

- If the image is statically imported, Next.js will automatically determine the intrinsic width and height.
- These values are used to determine the image ratio and prevent Cumulative Layout Shift while your image is loading.

example;

- app/page.tsx

import Image from 'next/image'
import ProfileImage from './profile.png'
 
export default function Page() {
  return (
    <Image
      src={ProfileImage}
      alt="Picture of the author"
      // width={500} automatically provided
      // height={500} automatically provided
      // blurDataURL="data:..." automatically provided
      // placeholder="blur" // Optional blur-up while loading
    />
  )
}

-> Remote images

- To use a remote image, you can provide a URL string for the src property.

example;

-app/page.tsx

import Image from 'next/image'
 
export default function Page() {
  return (
    <Image
      src="https://s3.amazonaws.com/my-bucket/profile.png"
      alt="Picture of the author"
      width={500}
      height={500}
    />
  )
}

- Since Next.js does not have access to remote files during the build process, you'll need to provide the width, height and optional blurDataURL props manually. 
- The width and height are used to infer the correct aspect ratio of image and avoid layout shift from the image loading in.
- Alternatively, you can use the fill property to make the image fill the size of the parent element.

- To safely allow images from remote servers, you need to define a list of supported URL patterns in next.config.js
- Be as specific as possible to prevent malicious usage. 
- For example, the following configuration will only allow images from a specific AWS S3 bucket:

example;
- next.config.ts

import type { NextConfig } from 'next'
 
const config: NextConfig = {
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 's3.amazonaws.com',
        port: '',
        pathname: '/my-bucket/**',
        search: '',
      },
    ],
  },
}
 
export default config

